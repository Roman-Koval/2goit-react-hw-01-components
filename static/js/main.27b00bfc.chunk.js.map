{"version":3,"sources":["components/profile/profile.style.js","components/profile/Profile.jsx","components/Statistics/StatisticTitle.jsx","components/Statistics/statistic.style.js","components/Statistics/StatisticItem.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendList.styled.js","components/FriendList/FriendItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/Transactions.styled.js","components/TransactionHistory/TransactionItem.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["Container","styled","div","Image","img","Description","DescriptionItems","DescriptionItemsName","Stats","ul","StatsItem","li","StatsItemName","span","ProfileWrap","avatar","name","tag","location","stats","src","alt","followers","views","likes","StatisticTitle","title","Statistic","StatisticList","h2","LabelName","StatisticItem","label","percentage","Statistics","map","stat","id","FriendListWrap","Item","OnLineStatus","props","isOnline","friendItem","width","FriendList","friends","friend","FriendItem","Table","table","TableData","td","transactionItem","type","amount","currency","TransactionHistory","items","item","TransactionItem","App","Profile","user","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27b00bfc.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  width: 300px;\n  height: 300px;\n  background-color: #bec0c4;\n  display: flex;\n  flex-direction: column;\n  padding: 25px;\n  justify-content: center;\n  align-items: center;\n  margin: 20px auto 50px;\n`;\n\nexport const Image = styled.img`\n  width: 50%;\n  margin-bottom: 30px;\n`;\n\nexport const Description = styled.div`\n  background-color: white;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 20px;\n`;\n\nexport const DescriptionItems = styled.div`\n  margin: 0px;\n  line-height: 1.4;\n`;\n\nexport const DescriptionItemsName = styled.div`\n  font-size: 25px;\n  font-weight: 700;\n`;\n\nexport const Stats = styled.ul`\n  margin: 0;\n  display: flex;\n  padding: 0;\n  justify-content: center;\n`;\nexport const StatsItem = styled.li`\n  margin: 0;\n  display: flex;\n  style-type: none;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 90px;\n  height: 70px;\n  border-radius: 4px;\n  border: 1px solid #696969;\n  background-color: #e6e6fa;\n`;\n\nexport const StatsItemName = styled.span`\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\r\nimport {\r\n    Container,\r\n    Image,\r\n    Description,\r\n    DescriptionItems,\r\n    DescriptionItemsName,\r\n    Stats,\r\n    StatsItem,\r\n    StatsItemName,\r\n  } from './profile.style';\r\nconst ProfileWrap = ({ avatar, name, tag, location, stats }) => {\r\n    return (\r\n      <Container>\r\n        <Description>\r\n            <Image src={avatar} alt=\"Аватар пользователя\" />\r\n            <DescriptionItems>\r\n            <DescriptionItemsName>{name}</DescriptionItemsName>\r\n            </DescriptionItems>\r\n            <DescriptionItems>{'@' + tag}</DescriptionItems>\r\n            <DescriptionItems>{location}</DescriptionItems>\r\n        </Description>\r\n  \r\n        <Stats>\r\n          <StatsItem>\r\n            <StatsItemName>Followers </StatsItemName>\r\n            <span>{stats.followers}</span>\r\n          </StatsItem>\r\n          <StatsItem>\r\n            <StatsItemName>Views </StatsItemName>\r\n            <span>{stats.views}</span>\r\n          </StatsItem>\r\n          <StatsItem>\r\n            <StatsItemName>Likes </StatsItemName>\r\n            <span>{stats.likes}</span>\r\n          </StatsItem>\r\n        </Stats>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  ProfileWrap.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    stats: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n  \r\n  export default ProfileWrap;","import PropTypes from 'prop-types';\r\n\r\nfunction StatisticTitle({ title }) {\r\n  return title ? <h2>{title}</h2> : '';\r\n}\r\n\r\nStatisticTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default StatisticTitle;","import styled from \"@emotion/styled\";\n\nexport const Statistic = styled.div`\n  width: 500px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  border: 0.5px solid rgb(169, 169, 169);\n  background-color: rgb(206, 206, 206);\n`;\n\nexport const StatisticTitle = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n  color: red;\n  padding: 20px 0px 10px 0px;\n  margin: 0px;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const StatisticList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  padding: 40px;\n  justify-content: space-around;\n  background-color: rgb(231, 231, 231);\n`;\n\nexport const StatisticItem = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: #cf0ec8;\n  border-radius: 4px;\n  border: 1px solid #696969;\n`;\n\nexport const LabelName = styled.span`\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\r\nimport { Container, LabelName } from './statistic.style';\r\n\r\nconst StatisticItem = ({ label, percentage }) => {\r\n  return (\r\n    <Container>\r\n      <LabelName>{label}</LabelName>\r\n      <span>{percentage}</span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nStatisticItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticTitle from \"./StatisticTitle\";\r\nimport StatisticItem from \"./StatisticItem\";\r\nimport {\r\n  Statistic,\r\n  StatisticList,\r\n} from './statistic.style';\r\n\r\n\r\n\r\nconst Statistics = ({title, stats}) => {\r\nreturn (\r\n<Statistic>\r\n  <StatisticTitle\r\n    title={title}\r\n  />\r\n  <StatisticList>\r\n    {stats.map((stat) => {\r\n          return (\r\n            <StatisticItem\r\n              key={stat.id}\r\n              label={stat.label}\r\n              percentage={stat.percentage}\r\n            />\r\n          );\r\n        })}\r\n   </StatisticList>\r\n</Statistic>\r\n);\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;","import styled from \"@emotion/styled\";\n\nexport const FriendListWrap = styled.ul`\n  width: 450px;\n  display: block;\n  justify-content: center;\n  border: 0.5px solid rgb(169, 169, 169);\n  background-color: rgb(206, 206, 206);\n`;\n\nexport const Item = styled.li`\n  background-color: #f8f1d7;\n  list-style-type: none;\n  width: 200px;\n  margin: 10px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const OnLineStatus = styled.span`\n  display: flex;\n  width: 10px;\n  height: 10px;\n  background-color: ${(props) => {\n    return props.isOnline ? \"green\" : \"red\";\n  }};\n`;\n","import PropTypes from 'prop-types';\r\nimport { Item, OnLineStatus } from './FriendList.styled';\r\n\r\nconst friendItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <Item>\r\n      <OnLineStatus isOnline={isOnline}> {isOnline} </OnLineStatus>\r\n      <img src={avatar} alt={name} width=\"48\" />\r\n      <p>{name}</p>\r\n    </Item>\r\n  );\r\n};\r\n\r\nfriendItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default friendItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendItem from './FriendItem';\r\nimport { FriendListWrap } from './FriendList.styled';\r\n\r\n\r\nconst FriendList = ({friends}) => {\r\nreturn (\r\n<FriendListWrap>\r\n      {friends.map(friend => {\r\n        return (\r\n          <FriendItem\r\n            key={friend.id}\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline}\r\n          />\r\n        );\r\n      })}\r\n    </FriendListWrap>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n          key: PropTypes.number.isRequired,\r\n          avatar: PropTypes.string.isRequired,\r\n          name: PropTypes.string.isRequired,\r\n          isOnline: PropTypes.bool.isRequired,\r\n        }),\r\n      ),\r\n    };\r\n\r\nexport default FriendList;","import styled from \"@emotion/styled\";\n\nexport const Table = styled.table`\n  width: 450px;\n  border: 1px solid black;\n  text-align: center;\n  margin: 20px auto;\n  padding-top: 20px;\n  background-color: #0eb7eb;\n`;\n\nexport const TableData = styled.td`\n  padding: 10px;\n  border: 0.5px solid rgb(169, 169, 169);\n  background-color: white;\n`;\n","import PropTypes from 'prop-types';\r\nimport { TableData } from './Transactions.styled';\r\n\r\nconst transactionItem = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <TableData>{type}</TableData>\r\n      <TableData>{amount}</TableData>\r\n      <TableData>{currency}</TableData>\r\n    </tr>\r\n  );\r\n};\r\n\r\ntransactionItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default transactionItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionItem from \"./TransactionItem\";\r\nimport { Table } from \"./Transactions.styled\";\r\n\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Type</th>\r\n              <th>Amount</th>\r\n              <th>Currency</th>\r\n            </tr>\r\n          </thead>\r\n    \r\n          <tbody>\r\n            {items.map((item) => {\r\n              return (\r\n                <TransactionItem\r\n                  key={item.id}\r\n                  currency={item.currency}\r\n                  type={item.type}\r\n                  amount={item.amount}\r\n                />\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      );\r\n    };\r\n\r\n    TransactionHistory.propTypes = {\r\n        type: PropTypes.string.isRequired,\r\n        amount: PropTypes.number.isRequired,\r\n        currency: PropTypes.string.isRequired,\r\n        key: PropTypes.string.isRequired,\r\n      };\r\n      \r\n      export default TransactionHistory;","import ProfileWrap from \"./components/profile/Profile.jsx\";\nimport user from \"./components/profile/user.json\";\n\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\nimport stat from \"./components/Statistics/statistical-data.json\";\n\nimport FriendList from \"./components/FriendList/FriendList.jsx\";\nimport friends from \"./components/FriendList/friends.json\";\n\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory.jsx\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nfunction App() {\n  return (\n    <div>\n      <ProfileWrap\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title={stat.title} stats={stat} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}